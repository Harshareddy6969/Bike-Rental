{"ast":null,"code":"import { put, takeEvery, call } from \"redux-saga/effects\";\nimport { fetchData } from \"../../services/fetchData\";\nimport { CREATE_RENT, CREATE_RENT_ERROR, CREATE_RENT_SUCCESS } from \"../types/createRent\";\nimport { ADD_BIKE_AVAILABLE_BIKES } from \"../types/availableBikes\";\n\nconst createRent = async bikeData => {\n  return await fetchData({\n    url: \"http://localhost:7777/api/bike\",\n    method: \"POST\",\n    body: { ...bikeData\n    }\n  });\n};\n\nfunction* createRentWorker(_ref) {\n  let {\n    payload\n  } = _ref;\n\n  try {\n    const {\n      newBike\n    } = yield call(createRent, payload);\n    yield put({\n      type: CREATE_RENT_SUCCESS,\n      payload: newBike\n    });\n    yield put({\n      type: ADD_BIKE_AVAILABLE_BIKES,\n      payload: newBike\n    });\n  } catch (e) {\n    yield put({\n      type: CREATE_RENT_ERROR,\n      payload: \"Something gone wrong while creating rent...\"\n    });\n  }\n}\n\nexport function* createRentWatcher() {\n  yield takeEvery(CREATE_RENT, createRentWorker);\n}","map":{"version":3,"sources":["/Users/apple/Downloads/sathwik_deliver/Bike-Rental/client/src/redux/saga/createRentSaga.js"],"names":["put","takeEvery","call","fetchData","CREATE_RENT","CREATE_RENT_ERROR","CREATE_RENT_SUCCESS","ADD_BIKE_AVAILABLE_BIKES","createRent","bikeData","url","method","body","createRentWorker","payload","newBike","type","e","createRentWatcher"],"mappings":"AAAA,SAASA,GAAT,EAAcC,SAAd,EAAyBC,IAAzB,QAAqC,oBAArC;AACA,SAASC,SAAT,QAA0B,0BAA1B;AACA,SACEC,WADF,EAEEC,iBAFF,EAGEC,mBAHF,QAIO,qBAJP;AAKA,SAASC,wBAAT,QAAyC,yBAAzC;;AAEA,MAAMC,UAAU,GAAG,MAAOC,QAAP,IAAoB;AACrC,SAAO,MAAMN,SAAS,CAAC;AACrBO,IAAAA,GAAG,EAAE,gCADgB;AAErBC,IAAAA,MAAM,EAAE,MAFa;AAGrBC,IAAAA,IAAI,EAAE,EACJ,GAAGH;AADC;AAHe,GAAD,CAAtB;AAOD,CARD;;AAUA,UAAUI,gBAAV,OAAwC;AAAA,MAAb;AAAEC,IAAAA;AAAF,GAAa;;AACtC,MAAI;AACF,UAAM;AAAEC,MAAAA;AAAF,QAAc,MAAMb,IAAI,CAACM,UAAD,EAAaM,OAAb,CAA9B;AACA,UAAMd,GAAG,CAAC;AACRgB,MAAAA,IAAI,EAAEV,mBADE;AAERQ,MAAAA,OAAO,EAAEC;AAFD,KAAD,CAAT;AAIA,UAAMf,GAAG,CAAC;AACRgB,MAAAA,IAAI,EAAET,wBADE;AAERO,MAAAA,OAAO,EAAEC;AAFD,KAAD,CAAT;AAID,GAVD,CAUE,OAAOE,CAAP,EAAU;AACV,UAAMjB,GAAG,CAAC;AACRgB,MAAAA,IAAI,EAAEX,iBADE;AAERS,MAAAA,OAAO,EAAE;AAFD,KAAD,CAAT;AAID;AACF;;AAED,OAAO,UAAUI,iBAAV,GAA8B;AACnC,QAAMjB,SAAS,CAACG,WAAD,EAAcS,gBAAd,CAAf;AACD","sourcesContent":["import { put, takeEvery, call } from \"redux-saga/effects\";\r\nimport { fetchData } from \"../../services/fetchData\";\r\nimport {\r\n  CREATE_RENT,\r\n  CREATE_RENT_ERROR,\r\n  CREATE_RENT_SUCCESS,\r\n} from \"../types/createRent\";\r\nimport { ADD_BIKE_AVAILABLE_BIKES } from \"../types/availableBikes\";\r\n\r\nconst createRent = async (bikeData) => {\r\n  return await fetchData({\r\n    url: \"http://localhost:7777/api/bike\",\r\n    method: \"POST\",\r\n    body: {\r\n      ...bikeData,\r\n    },\r\n  });\r\n};\r\n\r\nfunction* createRentWorker({ payload }) {\r\n  try {\r\n    const { newBike } = yield call(createRent, payload);\r\n    yield put({\r\n      type: CREATE_RENT_SUCCESS,\r\n      payload: newBike,\r\n    });\r\n    yield put({\r\n      type: ADD_BIKE_AVAILABLE_BIKES,\r\n      payload: newBike,\r\n    });\r\n  } catch (e) {\r\n    yield put({\r\n      type: CREATE_RENT_ERROR,\r\n      payload: \"Something gone wrong while creating rent...\",\r\n    });\r\n  }\r\n}\r\n\r\nexport function* createRentWatcher() {\r\n  yield takeEvery(CREATE_RENT, createRentWorker);\r\n}\r\n"]},"metadata":{},"sourceType":"module"}
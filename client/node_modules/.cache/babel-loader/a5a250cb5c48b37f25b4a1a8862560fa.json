{"ast":null,"code":"// service to fetch the data from database\nexport async function fetchData(_ref) {\n  let {\n    url,\n    method = \"GET\",\n    body = null,\n    headers = {}\n  } = _ref;\n\n  try {\n    if (body) {\n      body = JSON.stringify(body);\n      headers[\"Content-Type\"] = \"application/json\";\n    }\n\n    const response = await fetch(url, {\n      method,\n      body,\n      headers\n    });\n    const contentType = response.headers.get(\"content-type\");\n\n    if (contentType && contentType.indexOf(\"application/json\") !== -1) {\n      const data = await response.json();\n\n      if (!response.ok) {\n        throw new Error(data.message || \"Something gone wrong!\");\n      }\n\n      return data;\n    }\n\n    return response.status;\n  } catch (e) {\n    throw e;\n  }\n}","map":{"version":3,"sources":["/Users/apple/Downloads/sathwik_deliver/Bike-Rental/client/src/services/fetchData.js"],"names":["fetchData","url","method","body","headers","JSON","stringify","response","fetch","contentType","get","indexOf","data","json","ok","Error","message","status","e"],"mappings":"AAAA;AACA,OAAO,eAAeA,SAAf,OAKJ;AAAA,MAL6B;AAC9BC,IAAAA,GAD8B;AAE9BC,IAAAA,MAAM,GAAG,KAFqB;AAG9BC,IAAAA,IAAI,GAAG,IAHuB;AAI9BC,IAAAA,OAAO,GAAG;AAJoB,GAK7B;;AACD,MAAI;AACF,QAAID,IAAJ,EAAU;AACRA,MAAAA,IAAI,GAAGE,IAAI,CAACC,SAAL,CAAeH,IAAf,CAAP;AACAC,MAAAA,OAAO,CAAC,cAAD,CAAP,GAA0B,kBAA1B;AACD;;AACD,UAAMG,QAAQ,GAAG,MAAMC,KAAK,CAACP,GAAD,EAAM;AAChCC,MAAAA,MADgC;AAEhCC,MAAAA,IAFgC;AAGhCC,MAAAA;AAHgC,KAAN,CAA5B;AAKA,UAAMK,WAAW,GAAGF,QAAQ,CAACH,OAAT,CAAiBM,GAAjB,CAAqB,cAArB,CAApB;;AACA,QAAID,WAAW,IAAIA,WAAW,CAACE,OAAZ,CAAoB,kBAApB,MAA4C,CAAC,CAAhE,EAAmE;AACjE,YAAMC,IAAI,GAAG,MAAML,QAAQ,CAACM,IAAT,EAAnB;;AACA,UAAI,CAACN,QAAQ,CAACO,EAAd,EAAkB;AAChB,cAAM,IAAIC,KAAJ,CAAUH,IAAI,CAACI,OAAL,IAAgB,uBAA1B,CAAN;AACD;;AACD,aAAOJ,IAAP;AACD;;AACD,WAAOL,QAAQ,CAACU,MAAhB;AACD,GAnBD,CAmBE,OAAOC,CAAP,EAAU;AACV,UAAMA,CAAN;AACD;AACF","sourcesContent":["// service to fetch the data from database\r\nexport async function fetchData({\r\n  url,\r\n  method = \"GET\",\r\n  body = null,\r\n  headers = {},\r\n}) {\r\n  try {\r\n    if (body) {\r\n      body = JSON.stringify(body);\r\n      headers[\"Content-Type\"] = \"application/json\";\r\n    }\r\n    const response = await fetch(url, {\r\n      method,\r\n      body,\r\n      headers,\r\n    });\r\n    const contentType = response.headers.get(\"content-type\");\r\n    if (contentType && contentType.indexOf(\"application/json\") !== -1) {\r\n      const data = await response.json();\r\n      if (!response.ok) {\r\n        throw new Error(data.message || \"Something gone wrong!\");\r\n      }\r\n      return data;\r\n    }\r\n    return response.status;\r\n  } catch (e) {\r\n    throw e;\r\n  }\r\n}\r\n"]},"metadata":{},"sourceType":"module"}
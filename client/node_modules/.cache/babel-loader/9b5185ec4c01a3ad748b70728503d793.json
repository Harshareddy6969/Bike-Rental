{"ast":null,"code":"import { put, takeEvery, call } from \"redux-saga/effects\";\nimport { fetchData } from \"../../services/fetchData\";\nimport { DELETE_BIKE, DELETE_BIKE_ERROR, DELETE_BIKE_SUCCESS, DELETE_RENT, DELETE_RENT_SUCCESS, DELETE_RENT_ERROR } from \"../types/bike\";\nimport { RENT_BIKE, RENT_BIKE_ERROR, RENT_BIKE_SUCCESS } from \"../types/bike\";\nimport { REMOVE_BIKE_AVAILABLE_BIKES, ADD_BIKE_AVAILABLE_BIKES } from \"../types/availableBikes\";\nimport { REMOVE_RENT_RENTED_BIKES } from \"../types/rentedBikes\";\n\nconst rentBike = async rentBikeData => {\n  return await fetchData({\n    url: \"http://localhost:7777/api/rented-bike\",\n    method: \"POST\",\n    body: { ...rentBikeData\n    }\n  });\n};\n\nfunction* rentBikeWorker(_ref) {\n  let {\n    payload\n  } = _ref;\n\n  try {\n    const {\n      newRent\n    } = yield call(rentBike, payload);\n    yield put({\n      type: RENT_BIKE_SUCCESS,\n      payload: newRent\n    });\n  } catch (e) {\n    yield put({\n      type: RENT_BIKE_ERROR,\n      payload: \"Something gone wrong while renting bike...\"\n    });\n  }\n}\n\nconst deleteBike = async bikeID => {\n  return await fetchData({\n    url: \"http://localhost:7777/api/bike\",\n    method: \"DELETE\",\n    body: {\n      bikeID\n    }\n  });\n};\n\nfunction* deleteBikeWorker(_ref2) {\n  let {\n    payload\n  } = _ref2;\n\n  try {\n    yield call(deleteBike, payload);\n    yield put({\n      type: DELETE_BIKE_SUCCESS,\n      payload\n    });\n    yield put({\n      type: REMOVE_BIKE_AVAILABLE_BIKES,\n      payload\n    });\n  } catch (e) {\n    yield put({\n      type: DELETE_BIKE_ERROR,\n      payload: {\n        error: \"Something gone wrong while deleting bike...\",\n        bikeID: payload\n      }\n    });\n  }\n}\n\nconst deleteRent = async rentID => {\n  return await fetchData({\n    url: \"http://localhost:7777/api/rented-bike\",\n    method: \"DELETE\",\n    body: {\n      rentID\n    }\n  });\n};\n\nfunction* deleteRentWorker(_ref3) {\n  let {\n    payload: {\n      rentID,\n      bikeData\n    }\n  } = _ref3;\n\n  try {\n    yield call(deleteRent, rentID);\n    yield put({\n      type: DELETE_RENT_SUCCESS,\n      rentID\n    });\n    yield put({\n      type: REMOVE_RENT_RENTED_BIKES,\n      payload: rentID\n    });\n    yield put({\n      type: ADD_BIKE_AVAILABLE_BIKES,\n      payload: bikeData\n    });\n  } catch (e) {\n    yield put({\n      type: DELETE_RENT_ERROR,\n      payload: {\n        error: \"Something gone wrong while deleting rent...\",\n        rentID\n      }\n    });\n  }\n}\n\nexport function* bikeWatcher() {\n  yield takeEvery(RENT_BIKE, rentBikeWorker);\n  yield takeEvery(DELETE_BIKE, deleteBikeWorker);\n  yield takeEvery(DELETE_RENT, deleteRentWorker);\n}","map":{"version":3,"sources":["/Users/apple/Downloads/sathwik_deliver/Bike-Rental/client/src/redux/saga/bikeSaga.js"],"names":["put","takeEvery","call","fetchData","DELETE_BIKE","DELETE_BIKE_ERROR","DELETE_BIKE_SUCCESS","DELETE_RENT","DELETE_RENT_SUCCESS","DELETE_RENT_ERROR","RENT_BIKE","RENT_BIKE_ERROR","RENT_BIKE_SUCCESS","REMOVE_BIKE_AVAILABLE_BIKES","ADD_BIKE_AVAILABLE_BIKES","REMOVE_RENT_RENTED_BIKES","rentBike","rentBikeData","url","method","body","rentBikeWorker","payload","newRent","type","e","deleteBike","bikeID","deleteBikeWorker","error","deleteRent","rentID","deleteRentWorker","bikeData","bikeWatcher"],"mappings":"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","sourcesContent":["import { put, takeEvery, call } from \"redux-saga/effects\";\r\nimport { fetchData } from \"../../services/fetchData\";\r\nimport {\r\n  DELETE_BIKE,\r\n  DELETE_BIKE_ERROR,\r\n  DELETE_BIKE_SUCCESS,\r\n  DELETE_RENT,\r\n  DELETE_RENT_SUCCESS,\r\n  DELETE_RENT_ERROR,\r\n} from \"../types/bike\";\r\nimport { RENT_BIKE, RENT_BIKE_ERROR, RENT_BIKE_SUCCESS } from \"../types/bike\";\r\nimport {\r\n  REMOVE_BIKE_AVAILABLE_BIKES,\r\n  ADD_BIKE_AVAILABLE_BIKES,\r\n} from \"../types/availableBikes\";\r\nimport { REMOVE_RENT_RENTED_BIKES } from \"../types/rentedBikes\";\r\n\r\nconst rentBike = async (rentBikeData) => {\r\n  return await fetchData({\r\n    url: \"http://localhost:7777/api/rented-bike\",\r\n    method: \"POST\",\r\n    body: {\r\n      ...rentBikeData,\r\n    },\r\n  });\r\n};\r\n\r\nfunction* rentBikeWorker({ payload }) {\r\n  try {\r\n    const { newRent } = yield call(rentBike, payload);\r\n    yield put({\r\n      type: RENT_BIKE_SUCCESS,\r\n      payload: newRent,\r\n    });\r\n  } catch (e) {\r\n    yield put({\r\n      type: RENT_BIKE_ERROR,\r\n      payload: \"Something gone wrong while renting bike...\",\r\n    });\r\n  }\r\n}\r\n\r\nconst deleteBike = async (bikeID) => {\r\n  return await fetchData({\r\n    url: \"http://localhost:7777/api/bike\",\r\n    method: \"DELETE\",\r\n    body: {\r\n      bikeID,\r\n    },\r\n  });\r\n};\r\n\r\nfunction* deleteBikeWorker({ payload }) {\r\n  try {\r\n    yield call(deleteBike, payload);\r\n    yield put({\r\n      type: DELETE_BIKE_SUCCESS,\r\n      payload,\r\n    });\r\n    yield put({\r\n      type: REMOVE_BIKE_AVAILABLE_BIKES,\r\n      payload,\r\n    });\r\n  } catch (e) {\r\n    yield put({\r\n      type: DELETE_BIKE_ERROR,\r\n      payload: {\r\n        error: \"Something gone wrong while deleting bike...\",\r\n        bikeID: payload,\r\n      },\r\n    });\r\n  }\r\n}\r\n\r\nconst deleteRent = async (rentID) => {\r\n  return await fetchData({\r\n    url: \"http://localhost:7777/api/rented-bike\",\r\n    method: \"DELETE\",\r\n    body: {\r\n      rentID,\r\n    },\r\n  });\r\n};\r\n\r\nfunction* deleteRentWorker({ payload: { rentID, bikeData } }) {\r\n  try {\r\n    yield call(deleteRent, rentID);\r\n    yield put({\r\n      type: DELETE_RENT_SUCCESS,\r\n      rentID,\r\n    });\r\n    yield put({\r\n      type: REMOVE_RENT_RENTED_BIKES,\r\n      payload: rentID,\r\n    });\r\n    yield put({\r\n      type: ADD_BIKE_AVAILABLE_BIKES,\r\n      payload: bikeData,\r\n    });\r\n  } catch (e) {\r\n    yield put({\r\n      type: DELETE_RENT_ERROR,\r\n      payload: {\r\n        error: \"Something gone wrong while deleting rent...\",\r\n        rentID,\r\n      },\r\n    });\r\n  }\r\n}\r\n\r\nexport function* bikeWatcher() {\r\n  yield takeEvery(RENT_BIKE, rentBikeWorker);\r\n  yield takeEvery(DELETE_BIKE, deleteBikeWorker);\r\n  yield takeEvery(DELETE_RENT, deleteRentWorker);\r\n}\r\n"]},"metadata":{},"sourceType":"module"}